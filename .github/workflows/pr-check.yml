name: PR Checks

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    name: Validate Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build application
      run: dotnet build --no-restore --configuration Release
      
    - name: Run basic validation
      run: |
        echo "✅ Build successful"
        echo "✅ Dependencies restored"
        echo "🔍 Checking for common issues..."
        
        # Check for secrets in code (basic check)
        if grep -r "xoxb-" --include="*.cs" --include="*.json" --exclude="appsettings.example.json" . ; then
          echo "❌ Found potential secrets in code!"
          exit 1
        else
          echo "✅ No obvious secrets found in code"
        fi
        
        # Check for required files
        if [ ! -f "appsettings.example.json" ]; then
          echo "❌ Missing appsettings.example.json"
          exit 1
        else
          echo "✅ Configuration template exists"
        fi
        
        echo "🎉 All basic checks passed!"
        
    - name: Comment on PR
      if: success() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          // Check if we already commented to avoid spam
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('PR Checks Passed!')
          );
          
          if (!botComment) {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🎉 **PR Checks Passed!** ✅\n\n- ✅ Build successful\n- ✅ Dependencies restored\n- ✅ No obvious security issues\n- ✅ Configuration template exists\n\nThis PR is ready for review! 🚀'
            });
          }